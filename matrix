#!/bin/bash -e

function errorReturn() {
	return 1
}

function dims() {
	# NAME	
	# 	dims - Give the dimensions (rows and columns) of a given matrix
	# SYNOPSIS
	# 	Generates rows and columns of a given matrix in a file
	# DESCRIPTION
	# 	TODO
	# AUTHOR
	# 	TODO

	ROWS=$(wc -l < $1) # Counts the number of lines in the file with the matrix, which if formatted correctly will correspond to the number of rows
		
	words=$(wc -w < $1) # Counts the number of words in the file with the matrix
	COLS=$((words / ROWS)) # Divide the number of words by the number of rows to get columns

	echo $ROWS $COLS
	rm -f $1 # Delete temporary file
	return 0
}

function transpose() {

	line=""
	rows=$(wc -l < $1)
	words=$(wc -w < $1)
	cols=$((words / rows))

	for ((i=1; i<=cols; i++)); do
		val=$(cut -f $i $1)
		val=$(echo "$val" | tr $'\n' $'\t')
		line="$line$val\n"
	done
	
	echo -e $line

	rm -f $1 # Delete the temp files
	return 0
}

# MAIN PROG:

# Routes to different functions based on first arg value:
if [ "$1" = "dims" ] #If first arg is dims, call dims function
then
	datafilepath="datafile$$" # Generate a random file
	if [ "$#" = "1" ] # If the number of args is equal to one then read input from stdin into the random file
	then
		cat > "$datafilepath"
	elif [ "$#" = "2" ] # If number of args is two then assign the passed file to the random file
	then
		datafilepath=$2
	else
		>&2 echo You did not pass the correct number of arguments
		errorReturn
	fi
	dims $datafilepath
elif [ "$1" = "transpose" ]
then
	datafilepath="datafile$$"
	if [ "$#" = "1" ]
	then
		cat > "$datafilepath"
	elif [ "$#" = "2" ]
	then
		datafilepath=$2
	else 
		>&2 echo You did not pass the correct number of arguments
		errorReturn
	fi
	transpose $datafilepath
fi
